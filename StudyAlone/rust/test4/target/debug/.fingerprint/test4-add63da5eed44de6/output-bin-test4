{"message":"lifetime of reference outlives lifetime of borrowed content...","code":{"code":"E0312","explanation":"Reference's lifetime of borrowed content doesn't match the expected lifetime.\n\nErroneous code example:\n\n```compile_fail,E0312\npub fn opt_str<'a>(maybestr: &'a Option<String>) -> &'static str {\n    if maybestr.is_none() {\n        \"(none)\"\n    } else {\n        let s: &'a str = maybestr.as_ref().unwrap();\n        s  // Invalid lifetime!\n    }\n}\n```\n\nTo fix this error, either lessen the expected lifetime or find a way to not have\nto use this reference outside of its current scope (by running the code directly\nin the same block for example?):\n\n```\n// In this case, we can fix the issue by switching from \"static\" lifetime to 'a\npub fn opt_str<'a>(maybestr: &'a Option<String>) -> &'a str {\n    if maybestr.is_none() {\n        \"(none)\"\n    } else {\n        let s: &'a str = maybestr.as_ref().unwrap();\n        s  // Ok!\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":12771,"byte_end":12772,"line_start":565,"line_end":565,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    return x","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...the reference is valid for the static lifetime...","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"...but the borrowed content is only valid for the lifetime `'a` as defined on the function body at 564:10","code":null,"level":"note","spans":[{"file_name":"src\\main.rs","byte_start":12713,"byte_end":12715,"line_start":564,"line_end":564,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"fn test2<'a> (x: &'a str, y: &'a str) -> &'static str {","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0312]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: lifetime of reference outlives lifetime of borrowed content...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:565:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m565\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    return x\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: ...the reference is valid for the static lifetime...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...but the borrowed content is only valid for the lifetime `'a` as defined on the function body at 564:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:564:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m564\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn test2<'a> (x: &'a str, y: &'a str) -> &'static str {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0312`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0312`.\u001b[0m\n"}
