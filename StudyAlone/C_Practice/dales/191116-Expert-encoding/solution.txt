11월 16일 익스퍼트 시험 후기 및 분석
이번 시험은 메인문을 분석하면 다음과 같습니다.
알파벳 소문자로 된 길이가 1-7인 단어가 1024개(구분되는 단어의 수) 있습니다.
1024 개의 구분되는 단어를 가지고 단어 간에 공백(' ')을 넣어 단어 13000 개의 문자열, 즉 우리가 흔히 쓰는 텍스트가 있습니다.
이번 문제는 이 텍스트를 복원 가능하게 압축하는 문제입니다.

압축하지 않으면 문자열의 총 길이는 65000 (char)이고, 이는 650만점이 됩니다.
압축을 할 수록 점수는 낮아지고 낮은 점수가 합격을 하는 시험입니다.

1. 압축을 해 봅시다.
가장 쉬운 방법은 단어마다 인덱스를 부여하는 것입니다. 
총 1024 개의 인덱스를 만들어 단어 대신 인덱스로 텍스트를 저장할 수 있습니다.
1024 는 char 범위를 벗어나기 때문에, char 2 개, 즉 short 형으로 사용해서 저장해야 합니다.

하지만, 총 시퀀스의 수가 약 13000개이기 때문에 단어 하나를 2 char 씩쓰면 저장하기만해도 260만점이 나옵니다. 
즉 불합격이죠. 그렇기 때문에 이것은 반드시 줄여야할 포인트 입니다.
이를 줄이기 위해, 단어 인덱스 3개(1024*1024*1024=2^30) 를 묶어서 하나의 int, 즉 4개의 char 에 형변환해서 저장합니다.
그러면 한 단어다 4/3 char 씩 사용하게 되고, 13000*4/3 => 사전을 제외하고 170만점이 나오게 됩니다.
구현에서 중요한 점은 단어를 0~1023에 저장하는게 아니라 1~1024인덱스에 저장해야한다는 점입니다.
왜냐하면 우리는 등장하는 단어의 수를 정확히 모르기 때문이죠.
그래서 시퀀스의 끝을 표현하기 위해 0번 인덱스를 사용합니다.

2. 사전을 만드는 방법
사전을 만들면서 단어를 저장하는 것은 복잡하고, 시간이 점수에 영향이 적으니 사전을 만든다음 저장하는 방식, 즉 2 단계로 구현합시다.
사전을 만든다는 것은 단어마다 인덱스를 연결해준다는 것입니다.
이것은 단어를 적는 것만으로도 간단하게 할 수 있습니다.
등장하는 단어를 중복을 제거하고 차례대로 적어주면, 단어가 등장한 위치가 인덱스가 되는 것입니다.
즉, 단어가 저장된 위치가 인덱스가 되는 것입니다. 첫번째 등장한 단어의 인덱스는 1, 두번째 등장한 단어의 인덱스는 2 이렇게 적습니다.
그리고 단어 간에는 구분을 위해 공백을 두고 적습니다.
또 사전과 문장(인덱스들로 이루어진 것)을 구분하기 위해 저는 널문자 두 개를 사용하였습니다.
단어를 나열한 것은 단 (7 (단어의 길이) +1 (공백) )*1024 해서 약 8000이 됩니다.
앞에서 구현 170만점에 + 80만점을 하여 250만점이 됩니다.

여기서 점수를 더 줄이기 위해 사전의 길이를 줄여보고자 합니다.
인덱스로만 이루어진 부분은 이미 압축돼있는 구간이라 압축이 어렵습니다.
그래서 사전 부분만 압축을 해보겠습니다. 
사전의 길이를 1/2 로 압축하면 210만점을 얻을 수 있습니다.

char 은 256 개인데 30개 미만만 사용하고 있으니 나머지 숫자들도 사용해보겠습니다.
우리는 알파벳의 등장확률을 압니다. main 문에 배열로 주어지기 때문입니다. 
가장 낮은 확률은 약 1/1000(=960)이었습니다.
단어간에 등장하는 공백도 등장 확률이 젤 높기 때문에 압축에 반드시 포함시켜야 합니다. 
공백의 등장 확률은 1/8 이상이기 때문입니다. 왜냐하면 문자열의 길이가 최대 7이기 때문이죠.
그러면 주어진 확률과 공백의 확률을 이용해서 등장 확률이 높은 순서대로 약 200개의 문자열(예, "ae", "t ", "eee")을 구합니다. 
그리고 이것을 char 에서 사용되지 않는 번호에 연결해 줍니다  (하드코딩으로 사전 정의를 통해 변환 구현)
그러면 "tt" 같은 문자들은 100번 "e " 문자를 101 번 이런식으로 합니다. 그리고 단어수가 긴 문장부터 매칭을 하는 방법으로 하드코딩으로 만든 사전으로 변환을 해줍니다(이것때문에 몇백줄이 생겻씀니다.)
디코더 부분에서도 사전 부분만 분리해서 똑같이 원래 문자로 복원해 줍니다.
이 부분은 하드코딩으로 직접 만들어서 encode와 decode 의 앞 부분에 넣어줬습니다.

이렇게 하면 약 210만점 정도가 나오는 베이스 라인 코드가 됩니다.
이걸 기준으로 튜닝을 하거나 약간 변형을 해서 효율적인 답안을 찾아봅시다.

제가 익스퍼트 문제를 접근 하는 방법은 다음과 같습니다.
1. 메인문이나 문제 서술을 최소 30분이상 하나하나 밑바닥부터 이해하여 문제의 조건을 하나하나 주석으로 상세하게 적어내려간 후 풀이를 생각하기
2. 간략하게 시간 복잡도나 점수를 계산한 뒤, 병목지점을 찾아 그 부분을 개선할 방법을 먼저 생각하기

문제가 기억날때 한번 이글 보시고 다음 시험에 도움 얻길 바랍니다.
